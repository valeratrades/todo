env:
  CARGO_INCREMENTAL: '0'
  CARGO_NET_RETRY: '10'
  RUSTUP_MAX_RETRIES: '10'
  RUST_BACKTRACE: short
jobs:
  clippy:
    if: github.event_name != 'pull_request'
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@clippy
    - run: cargo clippy --tests -- -Dwarnings
    timeout-minutes: 45
  doc:
    env:
      RUSTDOCFLAGS: -Dwarnings
    if: needs.pre_ci.outputs.continue
    name: Documentation
    needs: pre_ci
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@nightly
    - uses: dtolnay/install@cargo-docs-rs
    - run: cargo docs-rs
    timeout-minutes: 45
  machete:
    name: Unused Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Installation
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-machete
    - name: Cargo Machete
      run: "cargo machete\nexit_code=$?\nif [ $exit_code = 0 ]; then\n  echo \"Found\
        \ unused dependencies\"\n  exit $exit_code\nfi\n"
  miri:
    if: needs.pre_ci.outputs.continue
    name: Miri
    needs: pre_ci
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@miri
    - run: cargo miri setup
    - env:
        MIRIFLAGS: -Zmiri-strict-provenance
      run: cargo miri test
    timeout-minutes: 45
  pre_ci:
    uses: valeratrades/.github/.github/workflows/pre_ci.yml@master
  sort:
    name: Cargo Sorted
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Installation
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-sort
    - name: Check if Cargo.toml is sorted
      run: "cargo sort -wc\nexit_code=$?\nif [ $exit_code != 0 ]; then\n  echo \"\
        Cargo.toml is not sorted. Run \\`cargo sort -w\\` to fix it.\"\n  exit $exit_code\n\
        fi\n"
  test:
    if: needs.pre_ci.outputs.continue
    name: Rust ${{matrix.rust}}
    needs: pre_ci
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{matrix.rust}}
    - if: github.ref == 'refs/heads/release'
      name: Set RUSTFLAGS for release branch
      run: echo "RUSTFLAGS=-Dwarnings" >> $GITHUB_ENV
    - if: matrix.rust == 'nightly'
      name: Enable type layout randomization
      run: echo RUSTFLAGS=${RUSTFLAGS}\ -Zrandomize-layout\ --cfg=exhaustive >> $GITHUB_ENV
    - run: cargo update
    - run: cargo check
    - run: cargo test
    strategy:
      fail-fast: false
      matrix:
        rust:
        - nightly
        - stable
    timeout-minutes: 45
  tokei:
    name: Reasonable Amount of Comments
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Installation
      uses: taiki-e/install-action@v2
      with:
        tool: tokei
    - name: Generate Tokei output
      run: tokei -o json > tokei_output.json
    - name: Install jq
      run: sudo apt-get install -y jq
    - name: Check Rust comments
      run: "comments=$(jq '.Rust.comments' tokei_output.json)\ncode=$(jq '.Rust.code'\
        \ tokei_output.json)\nif [ $((comments * 10)) -ge $code ]; then\n  echo \"\
        Number of comments should be less than 10% of code\"\n  exit 1\nelse\n  echo\
        \ \"Check passed: Number of comments is less than 10% of code\"\nfi\n"
name: CI
'on':
  pull_request: {}
  push: {}
  schedule:
  - cron: 0 0 1 * *
  workflow_dispatch: {}
permissions:
  contents: read
